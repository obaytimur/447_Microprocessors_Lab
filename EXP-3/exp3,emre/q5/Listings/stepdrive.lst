


ARM Macro Assembler    Page 1 


    1 00000000 400053FC 
                       GPIO_PORTB_DATA
                               EQU              0x400053FC
    2 00000000         
    3 00000000                 AREA             main, READONLY, CODE
    4 00000000                 THUMB
    5 00000000                 EXPORT           STEPDRIVE
    6 00000000                 EXTERN           DELAY100ms
    7 00000000         
    8 00000000         STEPDRIVE
                               PROC
    9 00000000 4C2E            LDR              R4, =GPIO_PORTB_DATA ; Check if
                                                             any switch is pres
                                                            sed
   10 00000002 6820            LDR              R0, [R4]
   11 00000004 F000 0030       AND              R0, #0x30
   12 00000008 2830            CMP              R0, #0x30
   13 0000000A D0FE            BEQ              STEPDRIVE
   14 0000000C         
   15 0000000C 2820            CMP              R0, #0x20   ; Check if first sw
                                                            itch is pressed
   16 0000000E D107            BNE              s2branch    ; If not equal, sec
                                                            ond switch is press
                                                            ed
   17 00000010 BF08 F7FF 
              FFFE             BLEQ             DELAY100ms  ; Add delay to avoi
                                                            d bouncing
   18 00000016 6820            LDR              R0, [R4]
   19 00000018 F000 0030       AND              R0, #0x30
   20 0000001C 2820            CMP              R0, #0x20
   21 0000001E D00A            BEQ              s1pressed
   22 00000020         
   23 00000020         s2branch
   24 00000020 2810            CMP              R0, #0x10   ; Check if second s
                                                            witch is pressed
   25 00000022 D1FE            BNE              STEPDRIVE   ; Neither of the sw
                                                            itches are pressed.
                                                             Start from beginni
                                                            ng
   26 00000024 BF08 F7FF 
              FFFE             BLEQ             DELAY100ms
   27 0000002A 6820            LDR              R0, [R4]
   28 0000002C F000 0030       AND              R0, #0x30
   29 00000030 2810            CMP              R0, #0x10
   30 00000032 D00E            BEQ              s2pressed   ; Check for bouncin
                                                            g then branch to sw
                                                            itch2
   31 00000034 D1FE            BNE              STEPDRIVE   ; If not same due t
                                                            o bouncing start ov
                                                            er
   32 00000036         s1pressed
   33 00000036 6820            LDR              R0, [R4]    ; Obtain the input
   34 00000038 F000 0030       AND              R0, #0x30   ; Check if switch1 
                                                            is still pressed
   35 0000003C 2820            CMP              R0, #0x20
   36 0000003E D0FA            BEQ              s1pressed   ; If pressed, wait 
                                                            until release
   37 00000040 BF18 F7FF 
              FFFE             BLNE             DELAY100ms  ; Add delay, check 



ARM Macro Assembler    Page 2 


                                                            bouncing
   38 00000046 6820            LDR              R0, [R4]
   39 00000048 F000 0030       AND              R0, #0x30
   40 0000004C 2820            CMP              R0, #0x20
   41 0000004E D0F2            BEQ              s1pressed
   42 00000050 D10D            BNE              s1released  ; Branch to release
                                                            
   43 00000052         s2pressed
   44 00000052 6820            LDR              R0, [R4]    ; Obtain the input
   45 00000054 F000 0030       AND              R0, #0x30   ; Check if switch2 
                                                            is still pressed
   46 00000058 2810            CMP              R0, #0x10
   47 0000005A D0FA            BEQ              s2pressed   ; If pressed, wait 
                                                            until release
   48 0000005C BF18 F7FF 
              FFFE             BLNE             DELAY100ms  ; Add delay, check 
                                                            bouncing
   49 00000062 6820            LDR              R0, [R4]
   50 00000064 F000 0030       AND              R0, #0x30
   51 00000068 2810            CMP              R0, #0x10
   52 0000006A D0F2            BEQ              s2pressed
   53 0000006C D112            BNE              s2released  ; Branch to release
                                                            
   54 0000006E         s1released
   55 0000006E F04F 0108       MOV              R1, #8      ; Forward rotation
   56 00000072 F04F 0000       MOV              R0, #0
   57 00000076 6822            LDR              R2, [R4]
   58 00000078 F002 020F       AND              R2, #0xF
   59 0000007C 4282            CMP              R2, R0
   60 0000007E BF08 2201       MOVEQ            R2, #1
   61 00000082 D005            BEQ              exit1
   62 00000084 4291            CMP              R1, R2
   63 00000086 BF08 2201       MOVEQ            R2, #1
   64 0000008A D001            BEQ              exit1
   65 0000008C EA4F 0242       LSL              R2, R2, #1
   66 00000090 6022    exit1   STR              R2, [R4]
   67 00000092 E7FE            B                STEPDRIVE   ; Start over
   68 00000094         s2released
   69 00000094 F04F 0101       MOV              R1, #1      ; Backward rotation
                                                            
   70 00000098 F04F 0000       MOV              R0, #0
   71 0000009C 6822            LDR              R2, [R4]
   72 0000009E F002 020F       AND              R2, #0xF
   73 000000A2 4282            CMP              R2, R0
   74 000000A4 BF08 2208       MOVEQ            R2, #8
   75 000000A8 D005            BEQ              exit2
   76 000000AA 4291            CMP              R1, R2
   77 000000AC BF08 2208       MOVEQ            R2, #8
   78 000000B0 D001            BEQ              exit2
   79 000000B2 EA4F 0252       LSR              R2, R2, #1
   80 000000B6 6022    exit2   STR              R2, [R4]
   81 000000B8 E7FE            B                STEPDRIVE   ; Start over
   82 000000BA         
   83 000000BA 4770            BX               LR
   84 000000BC                 ALIGN
   85 000000BC                 ENDP
                       
              400053FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=



ARM Macro Assembler    Page 3 


interwork --depend=.\objects\stepdrive.d -o.\objects\stepdrive.o -I"C:\Users\Em
re Çakmakyurdu\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C1
23" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --pred
efine="TM4C123GH6PM SETA 1" --list=.\listings\stepdrive.lst ..\q3\STEPDRIVE.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STEPDRIVE 00000000

Symbol: STEPDRIVE
   Definitions
      At line 8 in file ..\q3\STEPDRIVE.s
   Uses
      At line 5 in file ..\q3\STEPDRIVE.s
      At line 13 in file ..\q3\STEPDRIVE.s
      At line 25 in file ..\q3\STEPDRIVE.s
      At line 31 in file ..\q3\STEPDRIVE.s
      At line 67 in file ..\q3\STEPDRIVE.s
      At line 81 in file ..\q3\STEPDRIVE.s

exit1 00000090

Symbol: exit1
   Definitions
      At line 66 in file ..\q3\STEPDRIVE.s
   Uses
      At line 61 in file ..\q3\STEPDRIVE.s
      At line 64 in file ..\q3\STEPDRIVE.s

exit2 000000B6

Symbol: exit2
   Definitions
      At line 80 in file ..\q3\STEPDRIVE.s
   Uses
      At line 75 in file ..\q3\STEPDRIVE.s
      At line 78 in file ..\q3\STEPDRIVE.s

main 00000000

Symbol: main
   Definitions
      At line 3 in file ..\q3\STEPDRIVE.s
   Uses
      None
Comment: main unused
s1pressed 00000036

Symbol: s1pressed
   Definitions
      At line 32 in file ..\q3\STEPDRIVE.s
   Uses
      At line 21 in file ..\q3\STEPDRIVE.s
      At line 36 in file ..\q3\STEPDRIVE.s
      At line 41 in file ..\q3\STEPDRIVE.s

s1released 0000006E

Symbol: s1released
   Definitions
      At line 54 in file ..\q3\STEPDRIVE.s
   Uses
      At line 42 in file ..\q3\STEPDRIVE.s
Comment: s1released used once
s2branch 00000020




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: s2branch
   Definitions
      At line 23 in file ..\q3\STEPDRIVE.s
   Uses
      At line 16 in file ..\q3\STEPDRIVE.s
Comment: s2branch used once
s2pressed 00000052

Symbol: s2pressed
   Definitions
      At line 43 in file ..\q3\STEPDRIVE.s
   Uses
      At line 30 in file ..\q3\STEPDRIVE.s
      At line 47 in file ..\q3\STEPDRIVE.s
      At line 52 in file ..\q3\STEPDRIVE.s

s2released 00000094

Symbol: s2released
   Definitions
      At line 68 in file ..\q3\STEPDRIVE.s
   Uses
      At line 53 in file ..\q3\STEPDRIVE.s
Comment: s2released used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTB_DATA 400053FC

Symbol: GPIO_PORTB_DATA
   Definitions
      At line 1 in file ..\q3\STEPDRIVE.s
   Uses
      At line 9 in file ..\q3\STEPDRIVE.s
Comment: GPIO_PORTB_DATA used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DELAY100ms 00000000

Symbol: DELAY100ms
   Definitions
      At line 6 in file ..\q3\STEPDRIVE.s
   Uses
      At line 17 in file ..\q3\STEPDRIVE.s
      At line 26 in file ..\q3\STEPDRIVE.s
      At line 37 in file ..\q3\STEPDRIVE.s
      At line 48 in file ..\q3\STEPDRIVE.s

1 symbol
347 symbols in table
